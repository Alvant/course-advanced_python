base_help = ''' Сервер принимает следующие команды:
help - данная справка
about - описание текущей задачи
next - переход к следующему пункту
'''

base_about = '''
Вы находитесь на первом этапе получения Вашего секретного ключа.
Вам просто необходимо перейти на следующий этап получения секретного ключа, но учтите - все данные следующего этапа будут передаваться в заархивированном виде.

Для архивации данных применяется библиотека gzip
метод gzip.compress(data) архивирует (сжимает) байтстроку data
метод gzip.decompress(data) разархивирует
'''

dh_help = ''' Сервер принимает следующие команды:
help          - Данная справка
about         - Описание текущей задачи
about_dh      - Информация о протоколе Диффи — Хеллмана
about_coding  - Информация о методе кодировки
set           - Пердать информацию о ключе шифрования
get           - Возвращает В
connect       - Перейти в зашифрованный канал
'''

dh_about = '''
Вы находитесь на втором этапе получения Вашего секретного ключа. Вам необходимо:
1. Изучить протокол Диффи - Хеллмана
2. Способе кодирования данных
3. Передать коэффициенты g, p, A
4. Получить коэффициент B
5. Вычислить ключ шифрования
6. Перейти в зашифрованный канал
'''

dh_about_dh = '''    Протокол Диффи — Хеллмана
  https://ru.wikipedia.org/wiki/Протокол_Диффи_—_Хеллмана

  Протокол Диффи — Хеллмана — криптографический протокол, позволяющий двум и более сторонам получить общий секретный ключ, используя незащищенный от прослушивания канал связи. Полученный ключ используется для шифрования дальнейшего обмена с помощью алгоритмов симметричного шифрования.
  Получение ключа шифрования K для двух пользователей происходит по следующей схеме:

         USER 1                     USER 2
    ╭───────────────╮         ╭───────────────╮
    │\x1b[32m    a, g, p    \x1b[37m│\x1b[32m  g,p,A  \x1b[37m│\x1b[32m       b       \x1b[37m│
    │               │ ──────► │               │
    │\x1b[32m A = g^a mod p \x1b[37m│         │\x1b[32m B = g^b mod p \x1b[37m│
    │               │\x1b[32m    B    \x1b[37m│               │
    │\x1b[32m K = B^a mod p \x1b[37m│ ◄────── │\x1b[32m K = A^b mod p \x1b[37m│
    ╰───────────────╯         ╰───────────────╯

'''

dh_about_coding = '''  Шифрование информации происходит по следующему алгоритму:
    1. Строка \x1b[32mS\x1b[37m представляется как последовательность байт (encode)
    2. Ключ шифрования представляем как последовательность байт {метод int.to_bytes()}: 41960 → ... → [232, 163] = K_bits
    3. \x1b[32mi = 0; j = 0\x1b[37m
    4. \x1b[32mS[i] → S[i] mod K_bits[i]\x1b[37m
    5. \x1b[32mi = i + 1; j = (j+2) % len(K_bits)\x1b[37m
    6. если \x1b[32mi < len(S)\x1b[37m возвращаемся к шагу 3 иначе - шифрование закончено.
'''

dh_help = ''' Сервер принимает следующие команды:
help          - Данная справка
get_code      - Получить код
'''